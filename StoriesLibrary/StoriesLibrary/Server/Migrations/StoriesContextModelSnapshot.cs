// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoriesLibrary.Data;

namespace StoriesLibrary.Migrations
{
    [DbContext(typeof(StoriesContext))]
    partial class StoriesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StoriesLibrary.Entities.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Eva Artés",
                            Category = "terror",
                            PublishedDate = new DateTime(2021, 2, 28, 13, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Los ángulos tienen dientes"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Raquel Sastre",
                            Category = "novela",
                            PublishedDate = new DateTime(2021, 2, 28, 14, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "La gasolinera"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Andrés López",
                            Category = "terror",
                            PublishedDate = new DateTime(2021, 2, 28, 15, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Dejad que los niños se acerquen a mí"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Lucía Castillo",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 16, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "El vuelo al fin del mundo"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Diego de Salazar",
                            Category = "novela",
                            PublishedDate = new DateTime(2021, 2, 28, 17, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "El tocador de la abuela"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Daniela Rubio",
                            Category = "novela",
                            PublishedDate = new DateTime(2021, 2, 28, 18, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Las cerillas mojadas no sirven para nada"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Ricardo Allen",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 19, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Sacando las castañas del fuego"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Núria Azanza",
                            Category = "novela histórica",
                            PublishedDate = new DateTime(2021, 2, 28, 20, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Los árboles invisibles"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Blanca Romero",
                            Category = "novela",
                            PublishedDate = new DateTime(2021, 2, 28, 21, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Dirección prohibida"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Alfonso Tirado",
                            Category = "romántica",
                            PublishedDate = new DateTime(2021, 2, 28, 22, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "El olor de las margaritas"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Alejandro Carbonell",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 23, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Planetas sin vida"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Ignacio Aguado",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 0, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "La vacuna"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Cristóbal Lafuente",
                            Category = "Thriller",
                            PublishedDate = new DateTime(2021, 2, 28, 1, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "El master"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Eduardo Préscoli",
                            Category = "romántica",
                            PublishedDate = new DateTime(2021, 2, 28, 2, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "El desorden de tu ausencia"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Gloria Onrubia",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 3, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Los amigos que fuimos"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Elena Carrión",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 4, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Saltando charcos"
                        },
                        new
                        {
                            Id = 17,
                            Author = "Jesús Palomo",
                            Category = "literatura",
                            PublishedDate = new DateTime(2021, 2, 28, 5, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Las garras del hambre"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Daniel Martín",
                            Category = "Thriller",
                            PublishedDate = new DateTime(2021, 2, 28, 5, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "El barco de papel"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Rosa Ramos",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 6, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Los gatos también ladran"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Roberto Masip",
                            Category = "novela",
                            PublishedDate = new DateTime(2021, 2, 28, 7, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "Durmiendo"
                        },
                        new
                        {
                            Id = 21,
                            Author = "Juan María Martín",
                            Category = "ciencia ficción",
                            PublishedDate = new DateTime(2021, 2, 28, 8, 22, 51, 0, DateTimeKind.Unspecified),
                            RowVersion = 0,
                            Text = "Línea 1\r\nLínea 2",
                            Title = "La mirada vacía"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
